import './MoviesCardList.css'
import { MoviesCard } from '../MoviesCard/MoviesCard'
import { useEffect, useState } from 'react'
import { moviesApi } from '../../utils/MoviesApi'
import '../ButtonContainer/ButtonContainer.css'
import { SearchForm } from '../SearchForm/searchForm'
export const MoviesCardList = () => {

    //–≤–Ω–∞—á–∞–ª–µ –∑–∞–≥—Ä—É–∂—É –º–∞—Å—Å–∏–≤ –∫–∞—Ä—Ç–æ—á–µ–∫
    const [movies, setMovies] = useState([])

    useEffect(() => {
        Promise.all([
            moviesApi.getInitialMovies()
        ])
            .then(([cards]) => {
                cards.sort(() => 0.5 - Math.random())
                setMovies(cards)
            })

            .catch((err) => {
                console.log(err);
            })
    }, []);

    //–ø–æ–≤–µ—à—É —Å–ª—É—à–∞—Ç–µ–ª—å –Ω–∞ —Ä–∞–∑–º–µ—Ä –æ–∫–æ—à–∫–∞
    const [size, setSize] = useState(0)

    function resize() {
        setSize(document.body.offsetWidth)
    }

    window.addEventListener('resize', () => {
        setTimeout(() => {
            resize()
        }, 300)
    });

    //—Ç–µ–ø–µ—Ä—å –Ω—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å —Å–∫–æ–ª—å–∫–æ —è –æ—Ç–æ–±—Ä–∞–∂–∞—é –∫–∞—Ä—Ç–æ—á–µ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –æ–∫–Ω–∞, 
    //–∏ –Ω–∞ —Å–∫–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —è –º–æ–≥—É —Ä–∞—Å—à–∏—Ä–∏—Ç—å –º–∞—Å—Å–∏–≤ 

    const [moviesCount, setMoviesCount] = useState(0)
    const [pageCount, setPageCount] = useState(0)

    const [newPage, setNewPage] = useState(0)

    useEffect(() => {
        resize()
        if (size >= 768) {
            setMoviesCount(12)
            setPageCount(3)
        } else if (size <= 450) {
            setMoviesCount(5)
            setPageCount(2)
        }
        else if (size < 768)
            return setMoviesCount(8)


    }, [size]);


    //–≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π DOM —Ä–µ—à–∞–µ—Ç –∫–æ–Ω–µ—á–Ω–æ
    function pushTheButtonToLoadMore() {
        setNewPage(newPage + 1)
    }

    //—á—Ç–æ–±—ã —Å–ø—Ä—è—Ç–∞—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–∏–¥—É–º–∞–ª —Ç–∞–∫–æ–µ
    let hideButton = []
    function classNamed() {
        if (hideButton.length !== filteredMovies.length) { return 'movies-card-list__button movies-card-list__button_visible' }
        return 'movies-card-list__button '
    }


    const [errorMessage, setErrorMEsage] = useState('')
    const [filteredMovies, setFilteredMovies] = useState([])


// –∫–æ—Ä–æ—á–µ —Å–∫–æ–Ω—Å—Ç—Ä—É–ª–∏–ª —Ç–∞–∫—É—é —Ñ—É–Ω–∫—Ü–∏—é –¥–ª –ø–æ–∏—Å–∫–∞, —è —á–µ–ª–æ–≤–µ–∫ –Ω–µ–æ–ø—ã—Ç–Ω—ã–π –¥–µ–ª–∞—é –∫–∞–∫ —É–º–µ—é )))
    function search({ searchMessage, checkboxStatus }) {

        const regex = new RegExp(searchMessage)
        let res = []
        res = movies
            .filter(({ nameRU }) => regex.test(nameRU))
            .filter(({ duration }) => checkboxStatus ? duration < 40 : <empty />)

        setFilteredMovies(res)
        if (res.length === 0) { setErrorMEsage('–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ üò¢') }
    }


    return (
        <>
            <SearchForm submitHandler={search} />
            <section className="movies-card-list">
                <div className="movies-card-list__grid">

                    {hideButton = filteredMovies.map((el) => {
                        return <MoviesCard movie={el} key={el.id} isSaved={false} isLiked={false} imageUrl={"https://api.nomoreparties.co" + el.image.url} />
                    }).slice(0, moviesCount + (pageCount * newPage))}


                </div>
                <div className='movies-card-list__button-container'>
                    <button onClick={pushTheButtonToLoadMore} className={classNamed()}>–ï—â—ë</button>
                    <h2>{errorMessage}</h2>
                </div>
            </section>
        </>
    )


}